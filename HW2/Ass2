package interface1;

interface Flyer{
	public void takeoff();
	public void land();
	public void fly();
}

class Airplane implements Flyer {

	@Override
	public void takeoff() {
		System.out.println("Airplane will take off from Skopje Airport.");
	}

	@Override
	public void land() {
		System.out.println("Airplane has just landed at Berlin Airport.");
	}

	@Override
	public void fly() {
		System.out.println("Airport flies approximately at 10000 meters above the sea-level.");
		
	}
	
}

class Bird implements Flyer{

	@Override
	public void takeoff() {
		System.out.println("Bird will take off from the next.");
		
	}

	@Override
	public void land() {
		System.out.println("Bird has landed on the nest");
		
	}

	@Override
	public void fly() {
		System.out.println("Bird flies above the river. ");
		
	}
	
	public void buildNest() {
		System.out.println("The Bird has built the nest.");
	}
	
	public void layEggs() {
		System.out.println("The Bird has layed eggs in the nest.");
	}

	
}

class Superman implements Flyer{

	@Override
	public void takeoff() {
		System.out.println("Superman takes off.");
		
	}

	@Override
	public void land() {
		System.out.println("Superman has landed.");
		
	}

	@Override
	public void fly() {
		System.out.println("Superman flies like an airplane");
		
	}
	
	public void leapBuilding() {
		System.out.println("Superman leaps the building like a piece of cake");
	}
	
	public void stopBullet() {
		System.out.println("Superman is bulletproof");
	}
}

public class Test {

	public static void main(String[] args) {
		Airplane A = new Airplane();
		A.takeoff();
		A.land();
		A.fly();
		
		Bird B = new Bird();
		B.takeoff();
		B.land();
		B.fly();
		B.buildNest();
		B.layEggs();
		
		Superman S = new Superman();
		S.takeoff();
		S.land();
		S.fly();
		S.leapBuilding();
		S.stopBullet();
		
		
	}

}
