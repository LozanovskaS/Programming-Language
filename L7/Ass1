interface Two_D_Shape{
	static double PI = 3.14;
	
	void parameters();
	float area();
	float perimeter();
}

interface Three_D_Shape{
	float volume();
}

class Triangle implements Two_D_Shape{

	double sideA;
	double sideB;
	double sideC;
	double height;
	
	Triangle(double sideA, double sideB, double sideC, double height){
		this.sideA = sideA;
		this.sideB = sideB;
		this.sideC = sideC;
		this.height = height;
		
		System.out.println("A new triangle is created");
	}
		
		boolean rectangular(double sideA, double sideB, double sideC) {
			return Math.pow(sideA,  2) + Math.pow(sideB,  2) == Math.pow(sideC, 2);
		}
		

	
	@Override
	public void parameters() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public float area() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public float perimeter() {
		// TODO Auto-generated method stub
		return 0;
	}
	
}

class Sphere implements Two_D_Shape, Three_D_Shape{
	
	double radius;
	
	Sphere(double radius){
		this.radius = radius;
	
	System.out.println("A new sphere has been created");
}

	@Override
	public float volume() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void parameters() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public float area() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public float perimeter() {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
public class Interface {

	public static void main(String[] args) {
		Triangle T1 = new Triangle(3,5,6,3);
		Sphere B1 = new Sphere(4);
		Two_D_Shape T2 = new Triangle(8,2,10,16);
		Two_D_Shape B2 = new Sphere(3);
		Three_D_Shape B3 = new Sphere(7);

		System.out.println("Is it triangle " + T1.rectangular(3,5,6));
		
		int count = 0;
		
		if(T1 instanceof Two_D_Shape) {
			count++;
		}
		
		if(T2 instanceof Two_D_Shape) {
			count++;
		}
		
		if(B2 instanceof Two_D_Shape) {
			count++;
		}
		
}

}
